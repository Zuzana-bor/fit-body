{
  "version": 3,
  "sources": ["../../../../OneDrive/Plocha/code/ReactGirls/fit-body/netlify/functions/api-trainings.ts", "../../../../OneDrive/Plocha/code/ReactGirls/fit-body/src/data/trainings.ts"],
  "sourceRoot": "C:/Users/zkasi/AppData/Local/Temp/tmp-18396-ssJj6CIWLZ0y",
  "sourcesContent": ["import { Handler } from '@netlify/functions';\r\nimport { trainingsData } from '../../src/data/trainings';\r\n\r\nexport const handler: Handler = async ({ queryStringParameters }) => {\r\n  const delay = parseInt(queryStringParameters?.delay || '') || 0;\r\n\r\n  await new Promise((resolve) => setTimeout(resolve, delay * 1000));\r\n\r\n  return {\r\n    statusCode: 200,\r\n    body: JSON.stringify(trainingsData),\r\n  };\r\n};\r\n", "export type TrainingDataPart = {\r\n  number: string;\r\n  exerciseId: string;\r\n};\r\n\r\nexport type TrainingData = TrainingDataPart[];\r\n\r\nconst upperBody: TrainingData = [\r\n  { exerciseId: 'jumping-jack', number: '1 minuta' },\r\n  { exerciseId: 'inner-bicep-curl', number: '15 / 3' },\r\n  { exerciseId: 'tricep-overhead-extensions', number: '15 / 2' },\r\n  { exerciseId: 'arnoldpress', number: '20 / 3' },\r\n  { exerciseId: 'single-arm-dumbbell-row', number: '20 / 3' },\r\n  { exerciseId: 'push-ups', number: '15 / 2' },\r\n  { exerciseId: 'burpee', number: '10 / 2' },\r\n  { exerciseId: 'plank-arm-lifts', number: '12 / 2' },\r\n  { exerciseId: 'sit-ups', number: '30 / 3' },\r\n  { exerciseId: 'reverse-Plank-Kicks', number: '20 / 3' },\r\n];\r\n\r\nconst fullBody = [\r\n  { exerciseId: 'jumping-rope', number: '1 minuta' },\r\n  { exerciseId: 'dumbbell-squat', number: '30/3' },\r\n  { exerciseId: 'pendulum-lunge', number: '20/3' },\r\n  { exerciseId: 'side-leg-lift', number: '20/3' },\r\n  { exerciseId: 'push-Ups', number: '15/2' },\r\n  { exerciseId: 'dumbbell-Standing-Lateral-Raise', number: '15/2' },\r\n  { exerciseId: 'inner-bicep-curl', number: '15/3' },\r\n  { exerciseId: 'tricep-overhead-extensions', number: '15/2' },\r\n  { exerciseId: 'reverse-snow-angle', number: '10/3' },\r\n  { exerciseId: 'cross-Crunch', number: '30/3' },\r\n  { exerciseId: 'plank', number: '50 sekund/2' },\r\n];\r\n\r\nconst lowerBody = [\r\n  { exerciseId: 'jumping-jack', number: '1 minuta' },\r\n  { exerciseId: 'dumbbell-deadlifts', number: '20 / 3' },\r\n  { exerciseId: 'dumbbell-sumo-deadlift', number: '20 / 3' },\r\n  { exerciseId: 'jump-squat', number: '20 / 3' },\r\n  { exerciseId: 'side-Lunge', number: '20 / 3' },\r\n  { exerciseId: 'power-lunge', number: '30 / 3' },\r\n  { exerciseId: 'burpee', number: '10 / 2' },\r\n  { exerciseId: 'pelvic-tilt', number: '15 / 2' },\r\n];\r\n\r\nconst cardio = [\r\n  { exerciseId: 'jumping-rope', number: '1 minuta' },\r\n  { exerciseId: 'jumping-jack', number: '1 minuta' },\r\n  { exerciseId: 'sit-ups', number: '30 / 3' },\r\n  { exerciseId: 'burpee', number: '10 / 2' },\r\n  { exerciseId: 'jump-squat', number: '20 / 3' },\r\n  { exerciseId: 'side-lunge', number: '20 / 3' },\r\n  { exerciseId: 'power-lunge', number: '30 / 3' },\r\n  { exerciseId: 'push-ups', number: '15/2' },\r\n];\r\n\r\nexport type TrainingDataObject = {\r\n  id: string;\r\n  training: TrainingData;\r\n};\r\n\r\nexport type TrainingsData = TrainingDataObject[];\r\n\r\nexport const trainingsData: TrainingsData = [\r\n  {\r\n    id: 'upperBody',\r\n    training: upperBody,\r\n  },\r\n  {\r\n    id: 'lowerBody',\r\n    training: lowerBody,\r\n  },\r\n  {\r\n    id: 'fullBody',\r\n    training: fullBody,\r\n  },\r\n  {\r\n    id: 'cardio',\r\n    training: cardio,\r\n  },\r\n];\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACOA,IAAM,YAA0B;AAAA,EAC9B,EAAE,YAAY,gBAAgB,QAAQ,WAAW;AAAA,EACjD,EAAE,YAAY,oBAAoB,QAAQ,SAAS;AAAA,EACnD,EAAE,YAAY,8BAA8B,QAAQ,SAAS;AAAA,EAC7D,EAAE,YAAY,eAAe,QAAQ,SAAS;AAAA,EAC9C,EAAE,YAAY,2BAA2B,QAAQ,SAAS;AAAA,EAC1D,EAAE,YAAY,YAAY,QAAQ,SAAS;AAAA,EAC3C,EAAE,YAAY,UAAU,QAAQ,SAAS;AAAA,EACzC,EAAE,YAAY,mBAAmB,QAAQ,SAAS;AAAA,EAClD,EAAE,YAAY,WAAW,QAAQ,SAAS;AAAA,EAC1C,EAAE,YAAY,uBAAuB,QAAQ,SAAS;AACxD;AAEA,IAAM,WAAW;AAAA,EACf,EAAE,YAAY,gBAAgB,QAAQ,WAAW;AAAA,EACjD,EAAE,YAAY,kBAAkB,QAAQ,OAAO;AAAA,EAC/C,EAAE,YAAY,kBAAkB,QAAQ,OAAO;AAAA,EAC/C,EAAE,YAAY,iBAAiB,QAAQ,OAAO;AAAA,EAC9C,EAAE,YAAY,YAAY,QAAQ,OAAO;AAAA,EACzC,EAAE,YAAY,mCAAmC,QAAQ,OAAO;AAAA,EAChE,EAAE,YAAY,oBAAoB,QAAQ,OAAO;AAAA,EACjD,EAAE,YAAY,8BAA8B,QAAQ,OAAO;AAAA,EAC3D,EAAE,YAAY,sBAAsB,QAAQ,OAAO;AAAA,EACnD,EAAE,YAAY,gBAAgB,QAAQ,OAAO;AAAA,EAC7C,EAAE,YAAY,SAAS,QAAQ,cAAc;AAC/C;AAEA,IAAM,YAAY;AAAA,EAChB,EAAE,YAAY,gBAAgB,QAAQ,WAAW;AAAA,EACjD,EAAE,YAAY,sBAAsB,QAAQ,SAAS;AAAA,EACrD,EAAE,YAAY,0BAA0B,QAAQ,SAAS;AAAA,EACzD,EAAE,YAAY,cAAc,QAAQ,SAAS;AAAA,EAC7C,EAAE,YAAY,cAAc,QAAQ,SAAS;AAAA,EAC7C,EAAE,YAAY,eAAe,QAAQ,SAAS;AAAA,EAC9C,EAAE,YAAY,UAAU,QAAQ,SAAS;AAAA,EACzC,EAAE,YAAY,eAAe,QAAQ,SAAS;AAChD;AAEA,IAAM,SAAS;AAAA,EACb,EAAE,YAAY,gBAAgB,QAAQ,WAAW;AAAA,EACjD,EAAE,YAAY,gBAAgB,QAAQ,WAAW;AAAA,EACjD,EAAE,YAAY,WAAW,QAAQ,SAAS;AAAA,EAC1C,EAAE,YAAY,UAAU,QAAQ,SAAS;AAAA,EACzC,EAAE,YAAY,cAAc,QAAQ,SAAS;AAAA,EAC7C,EAAE,YAAY,cAAc,QAAQ,SAAS;AAAA,EAC7C,EAAE,YAAY,eAAe,QAAQ,SAAS;AAAA,EAC9C,EAAE,YAAY,YAAY,QAAQ,OAAO;AAC3C;AASO,IAAM,gBAA+B;AAAA,EAC1C;AAAA,IACE,IAAI;AAAA,IACJ,UAAU;AAAA,EACZ;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,UAAU;AAAA,EACZ;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,UAAU;AAAA,EACZ;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,UAAU;AAAA,EACZ;AACF;;;AD7EO,IAAM,UAAmB,OAAO,EAAE,sBAAsB,MAAM;AACnE,QAAM,QAAQ,SAAS,uBAAuB,SAAS,EAAE,KAAK;AAE9D,QAAM,IAAI,QAAQ,CAAC,YAAY,WAAW,SAAS,QAAQ,GAAI,CAAC;AAEhE,SAAO;AAAA,IACL,YAAY;AAAA,IACZ,MAAM,KAAK,UAAU,aAAa;AAAA,EACpC;AACF;",
  "names": []
}
